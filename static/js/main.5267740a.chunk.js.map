{"version":3,"sources":["serviceWorker.js","DataService/MbsForm.js","Components/Mbs-app-form.js","index.js"],"names":["Boolean","window","location","hostname","match","sendMbsForm","data","a","console","log","axios","post","headers","then","response","catch","err","Forms","onResolved","setState","messageSent","fileUploadbirthCertificate","document","getElementById","click","onchange","files","birthCertificate","birthCertificateName","name","fileUploaddegreeCertificate","degreeCertificate","degreeCertificateName","fileUploadregistrationCertificate","registrationCertificate","registrationCertificateName","fileUploadnimaLifeCertificate","nimaLifeCertificate","nimaLifeCertificateName","fileUploadmarriageCertificate","marriageCertificate","marriageCertificateName","state","personalFirstName","personalMiddleName","personalLastName","personalGender","personalDateOfBirth","personalAddress","personalAge","personalPincode","personalEmail","personalResidentialNumber","personalClinicNumber","personalContactNo","personalAlternateNumber","nomineeFirstName","nomineeMiddleName","nomineeLastName","relationWithNominee","nomineeContactNo","nomineeAlternateNo","nomineeAddress","nomineePincode","collegeName","degree","facultyName","yearOfPassing","registrationNumber","yearOfRegistration","regMedicalCouncilBoard","membershipType","membershipNumber","dateOfEnrollment","fileUploadState","selectYear","selectMonth","handleChange","bind","handleSubmit","handleDateChange","range","handleEnrollDateChange","d","this","e","target","value","preventDefault","recaptcha","execute","FormData","append","start","end","ans","i","push","years","Date","months","className","class","onSubmit","required","type","onChange","title","pattern","id","placeholder","disabled","selected","hidden","renderCustomHeader","date","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","margin","display","justifyContent","onClick","map","option","key","indexOf","placeholderText","aria-label","for","maxlength","minLength","require","fontSize","ref","sitekey","React","Component","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5267740a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from \"axios\";\n\nexport const sendMbsForm = async (data) => {\n  console.log(data);\n  return await axios\n    .post(\"https://nimaaaa-project.herokuapp.com/ApplicationForm\", data,{\n        headers: {\n            'accept': 'application/json',\n            'Content-Type': 'multipart/form-data'\n          }\n    })\n    .then((response) => {\n      console.log(response);\n      return response;\n    })\n    .catch((err) => {\n      console.log(err);\n      return null;\n    });\n};\n\n\n\n// sirname : String,\n//     firstName : String,\n//     middleName : String,\n//     contactNo : {\n//         type : String\n//     },\n//     address : {\n//         type : String\n//     },\n//     state: {\n//         type: String\n//     },\n//     district : {\n//         type : String\n//     },\n//     cityOrVillages : {\n//         type : String\n//     },\n//     images : [{\n//         type : String\n//     }]\n\n\n//https://nimaaaa-project.herokuapp.com/covidForm","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Mbs-app-form.css';\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Recaptcha from 'react-google-invisible-recaptcha';\nimport {sendMbsForm} from '../DataService/MbsForm';\nimport DatePicker from \"react-datepicker\";\n\n\n\nclass Forms extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            // personal details\n          personalFirstName: \"\",\n          personalMiddleName: \"\",\n          personalLastName: \"\",\n          personalGender: null,\n          personalDateOfBirth : \"\",\n          personalAddress : \"\",\n          personalAge:\"\",\n          personalPincode :\"\",\n          personalEmail : \"\",\n          personalResidentialNumber:\"\",\n          personalClinicNumber:\"\",\n          personalContactNo:\"\",\n          personalAlternateNumber:\"\",  \n            //nominee details\n          nomineeFirstName:\"\",\n          nomineeMiddleName:\"\",\n          nomineeLastName:\"\",\n          relationWithNominee:\"\",\n          nomineeContactNo:\"\",\n          nomineeAlternateNo: \"\", \n          nomineeAddress:\"\", \n          nomineePincode: \"\",  \n            //qualification details\n          collegeName:\"\",\n          degree:\"\",\n          facultyName:\"\",\n          yearOfPassing:\"\",  \n          //registration and membership details\n          registrationNumber:null,\n          yearOfRegistration:null,\n          regMedicalCouncilBoard:null,\n          membershipType:\"\",\n          membershipNumber:null,\n          dateOfEnrollment:\"\",\n          //uploads\n          birthCertificate:null,\n          birthCertificateName:\"\",\n          degreeCertificate:null,\n          degreeCertificateName:\"\",\n          registrationCertificate:null,\n          registrationCertificateName:\"\",\n          nimaLifeCertificate :null,\n          nimaLifeCertificateName:\"\",\n          marriageCertificate:null,  \n          marriageCertificateName:\"\",\n          fileUploadState:\"\",\n          selectYear:\"2021\",\n          selectMonth:\"January\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n       this.handleSubmit = this.handleSubmit.bind(this);\n       this.handleDateChange = this.handleDateChange.bind(this);\n       this.range = this.range.bind(this);\n       this.handleEnrollDateChange = this.handleEnrollDateChange.bind(this)\n      }\n\n      handleDateChange(d){\n          this.setState({personalDateOfBirth:d})\n      }\n\n      handleEnrollDateChange(d){\n          this.setState({dateOfEnrollment:d})\n      }\n\n      handleChange(e) {\n        this.setState({ \n          [e.target.name]: e.target.value });\n      }\n\n      onResolved=()=>{\n        this.setState({messageSent: true});\n      }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.recaptcha.execute();\n        var formData = new FormData(e.target);\n        const data = new FormData();\n        data.append(\"personalFirstName\",this.state.personalFirstName)\n        console.log(this.state)\n        data.append(\"personalMiddleName\",this.state.personalMiddleName)\n        data.append(\"personalLastName\",this.state.personalLastName)\n        data.append(\"personalGender\",this.state.personalGender)\n        data.append(\"personalDateOfBirth\",this.personalDateOfBirth)\n        data.append(\"personalAddress\",this.state.personalAddress)\n        data.append(\"personalAge\",this.state.personalAge)\n        data.append(\"personalPincode\",this.state.personalPincode)\n        data.append(\"personalEmail\",this.state.personalEmail)\n        data.append(\"personalResidentialNumber\",this.state.personalResidentialNumber)\n        data.append(\"personalClinicNumber\",this.state.personalClinicNumber)\n        data.append(\"personalContactNo\",this.state.personalContactNo)\n        data.append(\"personalAlternateNumber\",this.state.personalAlternateNumber)\n        data.append(\"nomineeFirstName\",this.state.nomineeFirstName)\n        data.append(\"nomineeMiddleName\",this.state.nomineeMiddleName)\n        data.append(\"nomineeLastName\",this.state.nomineeLastName)\n         data.append(\"relationWithNominee\",this.state.relationWithNominee)\n        data.append(\"nomineeContactNo\",this.state.nomineeContactNo)\n        data.append(\"nomineeAlternateNo\",this.state.nomineeAlternateNo)\n        data.append(\"nomineeAddress\",this.state.nomineeAddress)\n        data.append(\"nomineePincode\",this.state.nomineePincode)\n        data.append(\"collegeName\",this.state.collegeName)\n        data.append(\"degree\",this.state.degree)\n        data.append(\"facultyName\",this.state.facultyName)\n        data.append(\"registrationNumber\",this.state.registrationNumber)\n        data.append(\"yearOfRegistration\",this.state.yearOfRegistration)\n        data.append(\"regMedicalCouncilBoard\",this.state.regMedicalCouncilBoard)\n        data.append(\"membershipType\",this.state. membershipType)\n        data.append(\"membershipNumber\",this.state.membershipNumber)\n        data.append(\"dateOfEnrollment\",this.state.dateOfEnrollment)\n        data.append(\"yearOfPassing\",this.state.yearOfPassing)        \n        data.append('birthCertificate',this.state.birthCertificate)\n        data.append('degreeCertificate',this.state.degreeCertificate)\n        data.append('registrationCertificate',this.state.registrationCertificate)\n        data.append('nimaLifeCertificate',this.state. nimaLifeCertificate)\n        data.append('marriageCertificate',this.state.marriageCertificate)\n        \n       console.log(data);\n        sendMbsForm(data)\n        .then((response)=>{console.log(response)})\n        .catch((err) => {\n          console.log(err);\n        });\n      }\n\n\n    // for handling file upload ----------\n    \n    //birthcertificates\n    fileUploadbirthCertificate = () => {\n        document.getElementById('birthCertificate').click();\n        document.getElementById('birthCertificate').onchange = () => {\n            console.log(\"file received\",document.getElementById('birthCertificate').files[0])\n            this.setState({\n                birthCertificate: document.getElementById('birthCertificate').files[0],\n                birthCertificateName:document.getElementById('birthCertificate').files[0].name\n            });\n        }\n    }\n    //degreeCertificate\n    fileUploaddegreeCertificate = () => {\n        document.getElementById('degreeCertificate').click();\n        document.getElementById('degreeCertificate').onchange = () => {\n            this.setState({\n                degreeCertificate: document.getElementById('degreeCertificate').files[0],\n                degreeCertificateName:document.getElementById('degreeCertificate').files[0].name\n            });\n        }\n    }\n    //registrationCertificate\n    fileUploadregistrationCertificate = () => {\n        document.getElementById('registrationCertificate').click();\n        document.getElementById('registrationCertificate').onchange = () => {\n            this.setState({\n                registrationCertificate: document.getElementById('registrationCertificate').files[0],\n                registrationCertificateName:document.getElementById('registrationCertificate').files[0].name\n            });\n        }\n    }\n    //nimaLifeCertificate\n    fileUploadnimaLifeCertificate= () => {\n        document.getElementById('nimaLifeCertificate').click();\n        document.getElementById('nimaLifeCertificate').onchange = () => {\n            this.setState({\n                nimaLifeCertificate: document.getElementById('nimaLifeCertificate').files[0],\n                nimaLifeCertificateName:document.getElementById('nimaLifeCertificate').files[0].name\n            });\n        }\n    }\n    //marriageCertificate\n    fileUploadmarriageCertificate = () => {\n        document.getElementById('marriageCertificate').click();\n        document.getElementById('marriageCertificate').onchange = () => {\n            this.setState({\n                marriageCertificate: document.getElementById('marriageCertificate').files[0],\n                marriageCertificateName:document.getElementById('marriageCertificate').files[0].name\n            });\n        }\n    }\n\n    range(start, end) {\n        var ans = [];\n        for (let i = start; i <= end; i++) {\n            ans.push(i);\n        }\n        return ans;\n    }\n    \n    render() {\n\n      var d = new Date();  \n      const years = this.range(1940, 2021);\n      console.log(\"range\",years)\n      const months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n      ];\n    return (\n        <div className=\"container Mbs-app-form_container\">\n            <div className=\"row\">   \n            <div className=\"col-sm-2\">\n            <span class=\"Mbs-app-form_dot\"></span>\n            </div>\n            <div className=\"col-sm-10\">\n            <div className=\"Mbs-app-form_main-heading\">\n                NIMA Mutual Benifits Scheme Application Form\n            </div>\n            <hr/>\n            <div className=\"Mbs-app-form_main-address\">\n                4140 Parker Rd. Allentown, New Mexico 31134\n            </div>\n            </div>\n            </div>\n            {/* form starts from here */}\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"Mbs-app-form_personal-details\">\n                    <div className=\"Mbs-app-form_form-sub-heading\">\n                     Personal Details\n                    </div>\n                    <div className=\"form-row Mbs-app-form_pd-1\">\n                    <div className=\"col-md-2 col-sm-3 col-xs-12 \">\n                        <input required type=\"text\" \n                        className=\"form-control\" \n                        onChange={this.handleChange}\n                        title=\"*ENTER CHARACTER VALUES ONLY\"  \n                        pattern=\"[A-Za-z]{1,32}\" \n                        name=\"personalFirstName\" id=\"personalFirstName\"  \n                        \n                        placeholder=\" \"/>\n                        \n                        <span>First Name</span>    \n                    </div>\n                    <div class=\"col-md-2 col-sm-3 col-xs-12\">\n                        <input required type=\"text\" className=\"form-control\" onChange={this.handleChange} title=\"*ENTER CHARACTER VALUES ONLY\" pattern=\"[A-Za-z]{1,32}\" \n                        name=\"personalMiddleName\" id=\"personalMiddleName\" placeholder=\" \" />\n                        <span>Middle Name</span>\n                    </div>\n                    <div class=\"col-md-2 col-sm-3 col-xs-12\">\n                        <input required type=\"text\" className=\"form-control\" onChange={this.handleChange} title=\"*ENTER CHARACTER VALUES ONLY\" pattern=\"[A-Za-z]{1,32}\" \n                        name=\"personalLastName\"  id=\"personalLastName\" placeholder=\" \" />\n                        <span>Last Name</span>\n                    </div>\n                    <div className=\"col-md-2 col-sm-3 col-xs-12\">\n                        <select required class=\"form-control\" id=\"personalGender\" onChange={this.handleChange} name=\"personalGender\">\n                        <option value=\"\" disabled selected hidden>Gender</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                        </select>\n                    </div>\n                    {/* date is not coming on placeholder */}\n                    <div className=\"col-md-2 col-sm-3 col-xs-12\">\n                        {/* <input required type=\"date\" onChange={this.handleChange} name=\"personalDateOfBirth\" id=\"personalDateOfBirth\" placeholder=\"dd-mm-yyyy\" className=\"form-control Mbs-app-form_dob date-picker\" />\n                        <span>Date of Birth</span> */}\n                            {/* <DatePicker\n                                selected={this.state.personalDateOfBirth}\n                               // onSelect={handleDateSelect} //when day is clicked\n                                onChange={this.handleDateChange} //only when value has changed\n                            /> */}\n                            \n                            <DatePicker\n                                renderCustomHeader={({\n                                    date,\n                                    changeYear,\n                                    changeMonth,\n                                    decreaseMonth,\n                                    increaseMonth,\n                                    prevMonthButtonDisabled,\n                                    nextMonthButtonDisabled\n                                }) => (\n                                    <div\n                                        style={{\n                                            margin: 10,\n                                            display: \"flex\",\n                                            justifyContent: \"center\"\n                                        }}\n                                    >\n                                        <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n                                            {\"<\"}\n                                        </button>\n                                        <select\n                                            value={this.state.selectYear}\n                                            onChange={({ target: { value } }) => {\n                                            changeYear(value)\n                                            this.setState({selectYear:value})\n                                        }\n                                        }\n                                        >\n                                            {years.map(option => (\n                                                <option key={option} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n\n                                        <select\n                                            value={this.state.selectMonth}\n                                            onChange={({ target: { value } }) =>{\n                                                changeMonth(months.indexOf(value))\n                                                this.setState({selectMonth:value})\n                                            }\n                                            }\n                                        >\n                                            {months.map(option => (\n                                                <option key={option} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n\n                                        <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n                                            {\">\"}\n                                        </button>\n                                    </div>\n                                )}\n                               \n                                selected={this.state.personalDateOfBirth}\n                                onChange={this.handleDateChange}\n                                className=\"personalDOB\"\n                                placeholderText=\"Date of Birth\"\n                            > \n                            </DatePicker>\n\n                    </div>\n                    <div className=\"col-md-2 col-sm-3 col-xs-12\">\n                        <select required class=\"form-control\" name=\"personalAge\" id=\"personalAge\" onChange={this.handleChange} id=\"age\">\n                        <option value=\"\" disabled selected hidden>Age</option>\n                        <option value=\"A\">1-6</option>\n                        <option value=\"B\">6-12</option>\n                        <option value=\"C\">12-18</option>\n                        <option value=\"D\">18-25</option>\n                        <option value=\"E\">Above 25</option>\n                        </select>\n                    </div>\n                    </div>\n\n                    <div className=\"form-row Mbs-app-form_pd-2\">\n                        <div className=\"col-xs-12 col-sm-10\">\n                        <textarea required name=\"personalAddress\" id=\"personalAddress\" onChange={this.handleChange} className=\"form-control address\" aria-label=\"With textarea\" placeholder=\" \"></textarea>\n                        <span>Address</span> \n                        </div>\n                        <div className=\"col-xs-12 col-sm-2\">\n                        <label for=\"pincode\">PIN code:</label>\n                        <input required name=\"personalPincode\" id=\"personalPincode\" type=\"text\" onChange={this.handleChange} title=\"Pin Code should be of 6 digits\" pattern=\"[0-9]{6}\" maxlength=\"6\" minLength=\"6\" className=\"form-control\" />\n                        </div>\n                    </div>\n\n                    <div className=\"form-row Mbs-app-form_pd-3\">\n                    <div className=\"col-sm-4 col-xs-12 \">\n                        <input required type=\"email\" name=\"personalEmail\" id=\"personalEmail\" onChange={this.handleChange} title=\"Should be of form nima@example.com\" className=\"form-control\" placeholder=\" \" />\n                        <span>Email</span> \n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input require name=\"personalResidentialNumber\" id=\"personalResidentialNumber\" onChange={this.handleChange} title=\"Number should be of 10 digits only\" pattern=\"[1-9]{1}[0-9]{9}\" type=\"tel\" className=\"form-control\" placeholder=\" \" />\n                        <span>Residential Number</span> \n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required name=\"personalClinicNumber\"  id=\"personalClinicNumber\" onChange={this.handleChange} title=\"Number should be of 10 digits only\" pattern=\"[1-9]{1}[0-9]{9}\" type=\"tel\" className=\"form-control\" placeholder=\" \" />\n                        <span>Clinic Number</span> \n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required name=\"personalContactNo\"  id=\"personalContactNo\" onChange={this.handleChange} title=\"Number should be of 10 digits only\" pattern=\"[1-9]{1}[0-9]{9}\" type=\"tel\" className=\"form-control\" placeholder=\" \" />\n                        <span>Mobile Number</span> \n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required name=\"personalAlternateNumber\" id=\"personalAlternateNumber\" onChange={this.handleChange} title=\"Number should be of 10 digits only\" pattern=\"[1-9]{1}[0-9]{9}\" type=\"tel\" className=\"form-control\" placeholder=\" \" />\n                        <span>Alternate Number</span> \n                    </div>\n                    </div>\n                </div>\n                    \n                    {/* nominee details section begins from here */}\n\n                <div className=\"Mbs-app-form_nominee-details\">\n                    <div className=\"Mbs-app-form_form-sub-heading\">\n                        Nominee Details\n                    </div>\n                    <div className=\"form-row Mbs-app-form_pd-1\">\n                    <div className=\"col-sm-2 col-xs-12 \">\n                        <input required name=\"nomineeFirstName\" id=\"nomineeFirstName\" onChange={this.handleChange} title=\"*ENTER CHARACTER VALUES ONLY\" pattern=\"[A-Za-z]{1,32}\" type=\"text\" className=\"form-control\" placeholder=\" \" />\n                        <span>First Name</span> \n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required name=\"nomineeMiddleName\"  id=\"nomineeMiddleName\" onChange={this.handleChange} title=\"*ENTER CHARACTER VALUES ONLY\" pattern=\"[A-Za-z]{1,32}\" type=\"text\" className=\"form-control\" placeholder=\" \" />\n                        <span>Middle Name</span> \n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required name=\"nomineeLastName\" id=\"nomineeLastName\" onChange={this.handleChange} title=\"*ENTER CHARACTER VALUES ONLY\" pattern=\"[A-Za-z]{1,32}\" type=\"text\" className=\"form-control\" placeholder=\" \" />\n                        <span>Last Name</span> \n                    </div>\n                    <div className=\"col-sm-2 col-xs-12\">\n                    <input required name=\"relationWithNominee\" id=\"relationWithNominee\" onChange={this.handleChange} title=\"*ENTER CHARACTER VALUES ONLY\" pattern=\"[A-Za-z]{1,32}\" type=\"text\" className=\"form-control\" placeholder=\" \" />\n                        <span>Relation with Nominee</span> \n                    </div>\n                    {/* date is not coming on placeholder */}\n                    <div className=\"col-sm-2 col-xs-12\">\n                        <input required name=\"nomineeContactNo\"  id=\"nomineeContactNo\" onChange={this.handleChange} type=\"tel\" title=\"Number should be of 10 digits only\" pattern=\"[1-9]{1}[0-9]{9}\"  className=\"form-control\" placeholder=\" \" />\n                        <span>Mobile Number</span> \n                    </div>\n                    <div className=\"col-sm-2 col-xs-12\">\n                        <input required name=\"nomineeAlternateNo\"  id=\"nomineeAlternateNo\" onChange={this.handleChange} type=\"tel\" title=\"Number should be of 10 digits only\" pattern=\"[1-9]{1}[0-9]{9}\" className=\"form-control\" placeholder=\" \" />\n                        <span>Alternate Number</span> \n                    </div>\n                    </div>\n\n                    <div className=\"form-row Mbs-app-form_pd-2\">\n                        <div className=\"col-xs-12 col-sm-10\">\n                        <textarea required name=\"nomineeAddress\"  id=\"nomineeAddress\" onChange={this.handleChange} className=\"form-control address\" aria-label=\"With textarea\" placeholder=\" \"></textarea>\n                        <span>Address</span>\n                        </div>\n                        <div className=\"col-xs-12 col-sm-2\">\n                        <label for=\"pincode\">PIN code:</label>\n                        <input required name=\"nomineePincode\" id=\"nomineePincode\" onChange={this.handleChange} type=\"text\" title=\"Pin Code should be of 6 digits\" pattern=\"[0-9]{6}\" className=\"form-control\" />\n                        </div>\n                    </div>\n                  \n                </div>    \n\n                <div className=\"Mbs-app-form_qualification-details\">\n                <div className=\"Mbs-app-form_form-sub-heading\">\n                Qualification Details\n                </div>\n                <div className=\"form-row Mbs-app-form_pd-1\">\n                    <div className=\"col-sm-8 col-xs-12 \">\n                        <input required type=\"text\" name=\"collegeName\"  id=\"collegeName\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>College Name</span>\n                    </div>\n                    <div class=\"col-sm-4 col-xs-12\">\n                        <input required type=\"text\" name=\"degree\" id=\"degree\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>Degree</span>\n                    </div>\n                </div>\n                <div className=\"form-row Mbs-app-form_pd-2\">\n                    <div className=\"col-sm-10 col-xs-12 \">\n                        <input required type=\"text\" name=\"facultyName\" id=\"facultyName\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>University/Faculty Name</span>\n                    </div>\n                    {/* what should be the type                */}\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required type=\"number\" name=\"yearOfPassing\"  id=\"yearOfPassing\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>Year of Passing</span>\n                    </div>\n                </div>\n                </div> \n\n                <div className=\"Mbs-app-form_registration-and-membership-details\">\n                <div className=\"Mbs-app-form_form-sub-heading\">\n                Registration and Membership Details\n                </div>\n                <div className=\"form-row Mbs-app-form_pd-1\">\n                    <div className=\"col-sm-2 col-xs-12 \">\n                        <input required type=\"number\" name=\"registrationNumber\" id=\"registrationNumber\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>Registration Number</span>\n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required type=\"text\" name=\"yearOfRegistration\" id=\"yearOfRegistration\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>Year of Registration</span>\n                    </div>\n                    <div class=\"col-sm-2 col-xs-12\">\n                        <input required type=\"text\" name=\"regMedicalCouncilBoard\" id=\"regMedicalCouncilBoard\" onChange={this.handleChange}  className=\"form-control\" placeholder=\" \" />\n                        <span style={{fontSize:'0.84rem'}}>Reg.Medical Council Board</span>\n                    </div>\n                    <div className=\"col-sm-2 col-xs-12\">\n                        <select class=\"form-control\" name=\"membershipType\" id=\"membershipType\" onChange={this.handleChange}>\n                        <option value=\"\" disabled selected hidden>Membership Type</option>\n                        <option value=\"F\">Full Time</option>\n                        <option value=\"H\">Half Time</option>\n                        </select>\n                    </div>\n                    <div className=\"col-sm-2 col-xs-12 \">\n                        <input required type=\"number\" name=\"yearOfRegistration\" id=\"yearOfRegistration\" onChange={this.handleChange} className=\"form-control\" placeholder=\" \" />\n                        <span>Membership Number</span>\n                    </div>\n                    {/* date is not coming on placeholder */}\n                    <div className=\"col-sm-2 col-xs-12\">\n                        {/* <input required type=\"date\" name=\"dateOfEnrollment\" id=\"dateOfEnrollment\" onChange={this.handleChange}  className=\"form-control date-picker\" placeholder=\"dd-mm-yyyy\"/>\n                        <span>Date of Enrollment</span> */}\n                         <DatePicker\n                                renderCustomHeader={({\n                                    date,\n                                    changeYear,\n                                    changeMonth,\n                                    decreaseMonth,\n                                    increaseMonth,\n                                    prevMonthButtonDisabled,\n                                    nextMonthButtonDisabled\n                                }) => (\n                                    <div\n                                        style={{\n                                            margin: 10,\n                                            display: \"flex\",\n                                            justifyContent: \"center\"\n                                        }}\n                                    >\n                                        <button onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n                                            {\"<\"}\n                                        </button>\n                                        <select\n                                            value={this.state.selectYear}\n                                            onChange={({ target: { value } }) =>{ changeYear(value)\n                                            this.setState({selectYear:value})\n                                            }\n                                        }\n                                            >\n                                            {years.map(option => (\n                                                <option key={option} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n\n                                        <select\n                                            value={this.state.selectMonth}\n                                            onChange={({ target: { value } }) =>{\n                                                changeMonth(months.indexOf(value))\n                                                this.setState({selectMonth:value})\n                                            }\n                                            }\n                                        >\n                                            {months.map(option => (\n                                                <option key={option} value={option}>\n                                                    {option}\n                                                </option>\n                                            ))}\n                                        </select>\n\n                                        <button onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n                                            {\">\"}\n                                        </button>\n                                    </div>\n                                )}\n                               \n                                selected={this.state.dateOfEnrollment}\n                                onChange={this.handleEnrollDateChange}\n                                className=\"personalDOB\"\n                                placeholderText=\"Date of Enrollment\"\n                            > \n                            </DatePicker>\n\n                    </div>\n                    </div>     \n                </div>      \n\n    {/* UPLOAD Documents section */}\n                <div className=\"Mbs-app-form_upload-documents\">\n                    <div className=\"Mbs-app-form_form-sub-heading\">\n                        Upload Documents\n                    </div>           \n                    <div className=\"form-row upload\">\n                    {/* <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"> */}\n                    {/* the above link should be included in index.html for icons */}\n                    <div>\n                        <input id=\"birthCertificate\" type=\"file\" hidden />\n                        <button class=\"btn Mbs-app-form_btno\" type=\"button\" onClick={this.fileUploadbirthCertificate}> Birth Certificate <i className=\"fa fa-upload\"></i></button>\n                        {/* {this.state.birthCertificate != null &&\n                            this.state.birthCertificateName\n                        } */}\n                    </div>\n                    \n                    <div>\n                        <input id=\"degreeCertificate\" type=\"file\" hidden />\n                        <button class=\"btn Mbs-app-form_btno\" type=\"button\" onClick={this.fileUploaddegreeCertificate}> Degree/Diploma Certificate <i className=\"fa fa-upload\"></i></button>\n                        {/* {this.state.degreeCertificate != null &&\n                            this.state.degreeCertificate\n                        } */}\n                    </div>\n                    \n                    <div>\n                    <input id=\"registrationCertificate\" type=\"file\" hidden />\n                    <button class=\"btn Mbs-app-form_btno\" type=\"button\" onClick={this.fileUploadregistrationCertificate}>Registration Certificate<i className=\"fa fa-upload\"></i></button>\n                    {/* {this.state.registrationCertificate != null &&\n                            this.state.registrationCertificateName\n                        } */}\n                    </div>\n\n                    <div>\n                    <input id=\"nimaLifeCertificate\" type=\"file\" hidden />\n                    <button class=\"btn Mbs-app-form_btno\" type=\"button\" onClick={this.fileUploadnimaLifeCertificate}> NIMA life Certificate<i className=\"fa fa-upload\"></i> </button>\n                    {/* {this.state.nimaLifeCertificate != null &&\n                            this.state.nimaLifeCertificateName\n                        } */}\n                    </div>\n                    \n                    <div>\n                    <input id=\"marriageCertificate\" type=\"file\" hidden />\n                    <button class=\"btn Mbs-app-form_btno\" type=\"button\" onClick={this.fileUploadmarriageCertificate}> Marriage Certificate<i className=\"fa fa-upload\"></i></button>\n                    {/* {this.state.marriageCertificate != null &&\n                            this.state.marriageCertificateName\n                        } */}\n                    </div>\n                    </div> \n                </div>\n\n                <div className=\"Mbs-app-form_submit\">\n                    <button class=\"btn Mbs-app-form_view-form\">View Form</button>\n                    <button type=\"submit\" class=\"btn btn-success\"> Submit</button>\n                </div>\n            <br/>\n            <Recaptcha\n              ref={ref=>this.recaptcha=ref}\n              sitekey=\"6LcS8U0aAAAAAGaOUd9LRVKHnhDBzShPHgZ8gErf\"\n              onResolved={this.onResolved}\n              />\n            </form>\n        </div>\n    )\n}\n}\n\n\nexport default Forms\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Forms from './Components/Mbs-app-form'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Forms />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}